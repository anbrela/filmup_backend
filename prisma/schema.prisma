generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String        @id @unique @default(uuid())
  username    String        @unique
  email       String        @unique
  createdAt   DateTime      @default(now())
  comments    Comment[]
  roles       UserRoles[]
  views       View[]
  rates       Rating[]
  commentLike commentLike[]
}

model Role {
  id    String      @id @unique @default(uuid())
  role  String      @unique
  users UserRoles[]
}

model UserRoles {
  userId String
  roleId String
  role   Role   @relation(fields: [roleId], references: [id])
  user   User   @relation(fields: [userId], references: [id])

  @@id([userId, roleId])
}

model Movie {
  id         String    @id @unique @default(uuid())
  movieId    Int       @unique
  title      String
  year       String
  createdAt  DateTime  @default(now())
  imdbRating Float?
  posterPath String?
  comments   Comment[]
  views      View[]
  rates      Rating[]
}

model View {
  id       String   @id @unique @default(uuid())
  userId   String
  movieId  Int
  viewedAt DateTime
  user     User     @relation(fields: [userId], references: [id])
  movie    Movie    @relation(fields: [movieId], references: [movieId])

  @@unique([userId, movieId])
}

model Comment {
  id          String        @id @unique @default(uuid())
  userId      String
  movieId     Int
  comment     String
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  user        User          @relation(fields: [userId], references: [id])
  movie       Movie         @relation(fields: [movieId], references: [movieId])
  commentLike commentLike[]
}

model commentLike {
  id        String  @id @unique @default(uuid())
  userId    String  @unique
  commentId String
  user      User    @relation(fields: [userId], references: [id])
  comment   Comment @relation(fields: [commentId], references: [id])
}

model Rating {
  id      String @id @unique @default(uuid())
  userId  String @unique
  movieId Int
  rating  Float
  user    User   @relation(fields: [userId], references: [id])
  movie   Movie  @relation(fields: [movieId], references: [movieId])
}
